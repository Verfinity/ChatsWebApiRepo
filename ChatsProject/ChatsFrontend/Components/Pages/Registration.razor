@page "/register"
@inject HttpClient HttpClient
@inject ITokenPairSaver TokenPairSaver

<div class="main-container main-login-container">
    <div class="text-container login-form">
        <p class="title-text">Зарегестрироваться на сайте</p>
        <div class="field-containers">
            <div class="field-container">
                <p class="field-name">Логин</p>
                <input class="field-input" @bind-value="Nickname" />
            </div>
            <div class="field-container">
                <p class="field-name">Пароль</p>
                <input class="field-input" type="password" @bind-value="Password" />
            </div>
            <div class="field-container">
                <p class="field-name">Подтверждение пароля</p>
                <input class="field-input" type="password" @bind-value="DoublePassword" />
            </div>
        </div>
        <button class="text-container login-button" @onclick="async () => await RegisterAsync()">Зарегестрироваться</button>
    </div>
</div>

@code {
    public string Nickname = "";
    public string Password = "";
    public string DoublePassword = "";

    public async Task RegisterAsync()
    {
        if (Password != DoublePassword)
            return;

        var loginFields = new LoginFields
            {
                NickName = Nickname,
                Password = Password
            };
        var response = await HttpClient.PostAsJsonAsync("api/auth/register", loginFields);

        if (response.StatusCode == HttpStatusCode.OK)
        {
            var tokenPair = await response.Content.ReadFromJsonAsync<TokenPair>();
            await TokenPairSaver.SaveDataAsync(tokenPair);
        }
    }
}
